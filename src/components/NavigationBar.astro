---
export interface Props {
  items?: Array<string>;
  isBlack?: boolean;
}
const { items, isBlack } = Astro.props;
let logo = "/images/logo.png";
if (isBlack) {
  logo = "/images/logo_black.png";
}
let filteredItems = items.filter((elm) => elm);
---

<nav
  class="navbar is-flex is-flex-grow-0"
  class:list={[{ black: isBlack }]}
  role="navigation"
  aria-label="main navigation"
>
  <div class="navbar-brand" style="min-width: 10%;">
    <a class="navbar-item" href="/">
      <img src={logo} width="112" height="28" />
    </a>
  </div>
  <div class="is-hidden-desktop sep"></div>
  <div class="navbar-menu">
    <div
      class="navbar-start"
      style="flex-grow:1;  align-items: center;
    justify-content: center;align-content:   justify-content: space-between;"
    >
      {
        filteredItems
          .filter((elm) => elm)
          .map((item) => (
            <a class="navbar-item" href={"#" + item}>
              {item}
            </a>
          ))
      }
    </div>
  </div>
  <div
    class="navbar-brand is-justify-content-flex-end sideMenuButton"
    style="min-width: 10%;"
  >
    <a role="button" class="navbar-item" id="menu">MENU</a>
  </div>
</nav>

<style>
  .sep {
    flex: 1;
  }
  .black {
    color: black;
  }
  .black .navbar-item {
    color: black;
  }
  .navbar {
    position: absolute;
    width: 100%;
  }
  .navbar-item {
    color: white;
    flex: 0 0 auto;
  }
  a.navbar-item:hover {
    background-color: transparent;
    backdrop-filter: blur(12px) !important;
    color: #ad7600;
  }
  @media only screen and (max-width: 600px) {
    .navbar-menu {
      background-color: #101820;
    }
  }
</style>

